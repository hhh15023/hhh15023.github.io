<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-10T16:31:28.637Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ch_pro_001</title>
    <link href="http://example.com/2022/05/10/ch-pro-001/"/>
    <id>http://example.com/2022/05/10/ch-pro-001/</id>
    <published>2022-05-10T15:14:11.000Z</published>
    <updated>2022-05-10T16:31:28.637Z</updated>
    
    <content type="html"><![CDATA[<h3 id="道路曲线要素计算与里程桩计算"><a href="#道路曲线要素计算与里程桩计算" class="headerlink" title="道路曲线要素计算与里程桩计算"></a>道路曲线要素计算与里程桩计算</h3><h5 id="1-视图分析与功能分布"><a href="#1-视图分析与功能分布" class="headerlink" title="1. 视图分析与功能分布"></a>1. 视图分析与功能分布</h5><p>​    <img src="https://s2.loli.net/2022/05/10/Nur5BfJQTtCs12W.png" alt="image-20220510233247501"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1、2、3、10 属于toolstrip 的按钮绑定不同的功能 （快捷显示常用功能）</span><br><span class="line"><span class="code">1 - 打开资源管理器 然后选择流程 读取文件</span></span><br><span class="line"><span class="code">2 - 确定保存数据和保存类型 打开资源管理器并命名 保存</span></span><br><span class="line"><span class="code">3 - 清空4、5</span></span><br><span class="line"><span class="code">10 - 显示里程桩间隔</span></span><br><span class="line"><span class="code">4、5 属于tabControl 中的控件 </span></span><br><span class="line"><span class="code">4- datagridview 数据视窗 读取后显示数据 与清空有关</span></span><br><span class="line"><span class="code">5- 计算过程保存的文档显示 后续保存 与清空有关</span></span><br><span class="line"><span class="code">6、7、8、9 属于menuStrip 中的按钮绑定不同的功能</span></span><br><span class="line"><span class="code">6- 下拉中还存在&quot;打开&quot;, &quot;保存&quot; ,&quot;退出&quot; 不同功能不同实现</span></span><br><span class="line"><span class="code">7- 计算功能 对数据进行运用</span></span><br><span class="line"><span class="code">8- 下拉中存在”清空&quot;</span></span><br><span class="line"><span class="code">9- 给出说明过程</span></span><br></pre></td></tr></table></figure><h5 id="2-数据类型的解释"><a href="#2-数据类型的解释" class="headerlink" title="2. 数据类型的解释"></a>2. 数据类型的解释</h5><h6 id="1-普通点-名称-X-Y"><a href="#1-普通点-名称-X-Y" class="headerlink" title="1. 普通点(名称,X,Y)"></a>1. 普通点(名称,X,Y)</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Point</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> id;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> X, Y;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Point</span>(<span class="params"><span class="built_in">string</span> id, <span class="built_in">double</span> X, <span class="built_in">double</span> Y</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">            <span class="keyword">this</span>.X = X;</span><br><span class="line">            <span class="keyword">this</span>.Y = Y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="2-节点类型-名称-X-Y-R-L"><a href="#2-节点类型-名称-X-Y-R-L" class="headerlink" title="2. 节点类型(名称,X,Y,R,L)"></a>2. 节点类型(名称,X,Y,R,L)</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Node</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> id;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> X, Y;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> R, L;   <span class="comment">//圆曲线半径和缓曲线长</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span>(<span class="params"><span class="built_in">string</span> id, <span class="built_in">double</span> X, <span class="built_in">double</span> Y,<span class="built_in">double</span> R ,<span class="built_in">double</span> L</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">            <span class="keyword">this</span>.X = X;</span><br><span class="line">            <span class="keyword">this</span>.Y = Y;</span><br><span class="line">            <span class="keyword">this</span>.R = R;</span><br><span class="line">            <span class="keyword">this</span>.L = L;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="3-里程桩-名称-K-X-Y-Belong-分三种类型"><a href="#3-里程桩-名称-K-X-Y-Belong-分三种类型" class="headerlink" title="3. 里程桩(名称,K,X,Y,Belong) 分三种类型"></a>3. 里程桩(名称,K,X,Y,Belong) 分三种类型</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Milepost</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> id;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> K;       <span class="comment">//里程</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> X, Y;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> belong;  <span class="comment">//所属线路类型</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 求直线上的里程桩</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Milepost</span>(<span class="params"><span class="built_in">double</span> K, <span class="built_in">double</span> x, <span class="built_in">double</span> y, <span class="built_in">string</span> belong</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.id = <span class="string">&quot;K-&quot;</span> + K.ToString(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.K = K;</span><br><span class="line">            <span class="keyword">this</span>.X = x;</span><br><span class="line">            <span class="keyword">this</span>.Y = y;</span><br><span class="line">            <span class="keyword">this</span>.belong = belong;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 求圆曲线上的里程桩</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Milepost</span>(<span class="params"><span class="built_in">double</span> Ki,<span class="built_in">double</span> Kzy, <span class="built_in">double</span> alpha, <span class="built_in">double</span> alpha1, Point ZY, Node JDi, <span class="built_in">string</span> belong</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//独立坐标</span></span><br><span class="line">            <span class="built_in">double</span> phii = (Ki - Kzy) / JDi.R;</span><br><span class="line">            <span class="built_in">double</span> xi = JDi.R * Math.Sin(phii);</span><br><span class="line">            <span class="built_in">double</span> yi = JDi.R * (<span class="number">1</span> - Math.Cos(phii));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//α是右偏转角还是左偏转角情况</span></span><br><span class="line">            <span class="keyword">if</span> (alpha &lt; <span class="number">0</span>) &#123; yi = -yi; &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.id = <span class="string">&quot;K-&quot;</span> + Ki.ToString(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.K = Ki;</span><br><span class="line">            <span class="keyword">this</span>.X = ZY.X + xi * Math.Cos(alpha1) - yi * Math.Sin(alpha1);</span><br><span class="line">            <span class="keyword">this</span>.Y = ZY.Y + xi * Math.Sin(alpha1) + yi * Math.Cos(alpha1);</span><br><span class="line">            <span class="keyword">this</span>.belong = belong;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 求缓和曲面上的里程桩</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Milepost</span>(<span class="params"><span class="built_in">double</span> Ki, <span class="built_in">double</span> Kzh, <span class="built_in">double</span> Khz, <span class="built_in">double</span> Khy, <span class="built_in">double</span> Kyh, <span class="built_in">double</span> m,<span class="built_in">double</span> P, <span class="built_in">double</span> beita0,<span class="built_in">double</span> alpha, <span class="built_in">double</span> alphaZH,<span class="built_in">double</span> alphaHZ, Point ZH,Point HZ, Node JDi, <span class="built_in">string</span> belong</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//弧长和独立坐标</span></span><br><span class="line">            <span class="built_in">double</span> Li, xi, yi;    </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Ki &lt;= Kyh)</span><br><span class="line">            &#123;</span><br><span class="line">                Li = Ki - Kzh;</span><br><span class="line">                <span class="keyword">if</span> (Ki &lt;= Khy)</span><br><span class="line">                &#123;</span><br><span class="line">                    xi = Li - Math.Pow(Li, <span class="number">5</span>) / <span class="number">40.0</span> / JDi.R / JDi.R / JDi.L / JDi.L;</span><br><span class="line">                    yi = Math.Pow(Li, <span class="number">3</span>) / <span class="number">6.0</span> / JDi.R / JDi.L;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">double</span> phii = beita0 + (Li - JDi.L) / JDi.R;</span><br><span class="line">                    xi = m + JDi.R * Math.Sin(phii);</span><br><span class="line">                    yi = P + JDi.R * (<span class="number">1</span> - Math.Cos(phii));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//α是右偏转角还是左偏转角情况</span></span><br><span class="line">                <span class="keyword">if</span> (alpha &lt; <span class="number">0</span>) &#123; yi = -yi; &#125;</span><br><span class="line">                <span class="keyword">this</span>.X = ZH.X + xi * Math.Cos(alphaZH) - yi * Math.Sin(alphaZH);</span><br><span class="line">                <span class="keyword">this</span>.Y = ZH.Y + xi * Math.Sin(alphaZH) + yi * Math.Cos(alphaZH);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Li = Khz - Ki;</span><br><span class="line">                xi = Li - Math.Pow(Li, <span class="number">5</span>) / <span class="number">40.0</span> / JDi.R / JDi.L / JDi.L;</span><br><span class="line">                yi = Math.Pow(Li, <span class="number">3</span>) / <span class="number">6.0</span> / JDi.R / JDi.L;</span><br><span class="line">                <span class="keyword">this</span>.X = HZ.X + xi * Math.Cos(alphaHZ) + yi * Math.Sin(alphaHZ);</span><br><span class="line">                <span class="keyword">this</span>.Y = HZ.Y + xi * Math.Cos(alphaHZ) - yi * Math.Cos(alphaHZ);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.id = <span class="string">&quot;K-&quot;</span> + Ki.ToString(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.K = Ki;</span><br><span class="line">            <span class="keyword">this</span>.belong = belong;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="4-一般曲线"><a href="#4-一般曲线" class="headerlink" title="4 .一般曲线"></a>4 .一般曲线</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Curve</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> id;</span><br><span class="line">        <span class="keyword">public</span> Point ZY, YZ;                  <span class="comment">//直圆点，圆直点</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> Kjd, Kzy, Kyz;          <span class="comment">//交点JDi、直圆点和圆直点的里程</span></span><br><span class="line">        <span class="keyword">public</span> Milepost QZ;                   <span class="comment">//曲中点坐标和里程</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> T, L, E, q;             <span class="comment">//圆曲线要素：切线，曲线长，外矢径，切曲差</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> alpha1, alpha2, alpha;  <span class="comment">//前方位角，后方位角，线路转角</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 圆曲线计算（交点，前X坐标，前Y坐标，后X坐标，后Y坐标）</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Curve</span>(<span class="params">Node JDi, <span class="built_in">double</span> Kjd, <span class="built_in">double</span> X1, <span class="built_in">double</span> Y1, <span class="built_in">double</span> X2, <span class="built_in">double</span> Y2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.id = JDi.id;</span><br><span class="line">            <span class="keyword">this</span>.Kjd = Kjd;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//线路转角</span></span><br><span class="line">            <span class="keyword">this</span>.alpha1 = Math.Atan2(JDi.Y - Y1, JDi.X - X1);</span><br><span class="line">            <span class="keyword">this</span>.alpha2 = Math.Atan2(Y2 - JDi.Y, X2 - JDi.X);</span><br><span class="line">            <span class="keyword">if</span>((alpha2 - alpha1 &gt;= <span class="number">0</span> &amp;&amp; alpha2 - alpha1 &lt; Math.PI) || (alpha2 - alpha1 &gt; -Math.PI &amp;&amp; alpha2 - alpha1 &lt;= <span class="number">0</span>)) &#123; <span class="keyword">this</span>.alpha = alpha2 - alpha1; &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(alpha2 - alpha1 &gt;= Math.PI &amp;&amp; alpha2 - alpha1 &lt;= <span class="number">2</span> * Math.PI) &#123; <span class="keyword">this</span>.alpha = alpha2 - alpha1 - <span class="number">2</span> * Math.PI; &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(alpha2 - alpha1 &gt;= <span class="number">-2</span> * Math.PI &amp;&amp; alpha2 - alpha1 &lt;= -Math.PI) &#123; <span class="keyword">this</span>.alpha = alpha2 - alpha1 + <span class="number">2</span> * Math.PI; &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//圆曲线要素</span></span><br><span class="line">            <span class="keyword">this</span>.T = JDi.R * Math.Tan(Math.Abs(alpha) / <span class="number">2.0</span>);</span><br><span class="line">            <span class="keyword">this</span>.L = JDi.R * Math.Abs(alpha);</span><br><span class="line">            <span class="keyword">this</span>.E = JDi.R * (<span class="number">1.0</span> / Math.Cos(Math.Abs(alpha) / <span class="number">2.0</span>) - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">this</span>.q = <span class="number">2.0</span> * T - L;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//圆曲线主点里程</span></span><br><span class="line">            <span class="keyword">this</span>.Kzy = Kjd - T;</span><br><span class="line">            <span class="keyword">this</span>.Kyz = Kzy + L;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//主点ZY、YZ坐标</span></span><br><span class="line">            <span class="keyword">this</span>.ZY = <span class="keyword">new</span> Point(id, JDi.X - T * Math.Cos(alpha1), JDi.Y - T * Math.Sin(alpha1));</span><br><span class="line">            <span class="keyword">this</span>.YZ = <span class="keyword">new</span> Point(id, JDi.X + T * Math.Cos(alpha2), JDi.Y + T * Math.Sin(alpha2));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//QZ</span></span><br><span class="line">            <span class="keyword">this</span>.QZ = <span class="keyword">new</span> Milepost(Kzy + L / <span class="number">2.0</span>, Kzy, alpha, alpha1, ZY, JDi, <span class="string">&quot;圆曲线&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="5-特殊曲线"><a href="#5-特殊曲线" class="headerlink" title="5. 特殊曲线"></a>5. 特殊曲线</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Ecurve</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> id;</span><br><span class="line">        <span class="keyword">public</span> Point ZH, HZ;                     <span class="comment">//直缓点，缓直点</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> Kjd, Kzh, Khz;             <span class="comment">//交点JDi,直缓点，缓圆点，圆缓点，缓直点的里程</span></span><br><span class="line">        <span class="keyword">public</span> Milepost QZ, HY, YH;              <span class="comment">//曲中点，缓圆点，圆缓点坐标和里程</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> m, P, beita0;              <span class="comment">//缓和曲面参数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> Th, Lh, Eh, q, Ls;         <span class="comment">//缓和曲线要素：切线，曲线长，外矢径，切曲差，缓和曲线长</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> alphaZH, alphaHZ, alpha;     <span class="comment">//前方位角，后方位角，线路转角</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Ecurve</span>(<span class="params">Node JDi, <span class="built_in">double</span> Kjd, <span class="built_in">double</span> X1, <span class="built_in">double</span> Y1, <span class="built_in">double</span> X2, <span class="built_in">double</span> Y2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.id = JDi.id;</span><br><span class="line">            <span class="keyword">this</span>.Ls = JDi.L;</span><br><span class="line">            <span class="keyword">this</span>.Kjd = Kjd;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//线路转角</span></span><br><span class="line">            <span class="keyword">this</span>.alphaZH = Math.Atan2(JDi.Y - Y1, JDi.X - X1);</span><br><span class="line">            <span class="keyword">this</span>.alphaHZ = Math.Atan2(Y2 - JDi.Y, X2 - JDi.X);</span><br><span class="line">            <span class="keyword">if</span> ((alphaHZ - alphaZH &gt;= <span class="number">0</span> &amp;&amp; alphaHZ - alphaZH &lt; Math.PI) || (alphaHZ - alphaZH &gt; -Math.PI &amp;&amp; alphaHZ - alphaZH &lt;= <span class="number">0</span>)) &#123; <span class="keyword">this</span>.alpha = alphaHZ - alphaZH; &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (alphaHZ - alphaZH &gt;= Math.PI &amp;&amp; alphaHZ - alphaZH &lt;= <span class="number">2</span> * Math.PI) &#123; <span class="keyword">this</span>.alpha = alphaHZ - alphaZH - <span class="number">2</span> * Math.PI; &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (alphaHZ - alphaZH &gt;= <span class="number">-2</span> * Math.PI &amp;&amp; alphaHZ - alphaZH &lt;= -Math.PI) &#123; <span class="keyword">this</span>.alpha = alphaHZ - alphaZH + <span class="number">2</span> * Math.PI; &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//计算缓和曲线参数</span></span><br><span class="line">            <span class="keyword">this</span>.m = Ls / <span class="number">2.0</span> - Math.Pow(Ls, <span class="number">3</span>) / <span class="number">240.0</span> / Math.Pow(JDi.R, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">this</span>.P = Ls * Ls / <span class="number">24.0</span> / JDi.R;</span><br><span class="line">            <span class="keyword">this</span>.beita0 = Ls / <span class="number">2.0</span> / JDi.R;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//计算缓和曲面要素</span></span><br><span class="line">            <span class="keyword">this</span>.Th = m + (JDi.R + P) * Math.Tan(Math.Abs(alpha) / <span class="number">2.0</span>);</span><br><span class="line">            <span class="keyword">this</span>.Lh = JDi.R * (Math.Abs(alpha) - <span class="number">2.0</span> * beita0) + <span class="number">2.0</span> * Ls;</span><br><span class="line">            <span class="keyword">this</span>.Eh = (JDi.R + P) * (<span class="number">1.0</span> / Math.Cos(Math.Abs(alpha) / <span class="number">2.0</span>)) - JDi.R;</span><br><span class="line">            <span class="keyword">this</span>.q = <span class="number">2.0</span> * Th - Lh;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//曲线主点里程计算</span></span><br><span class="line">            <span class="keyword">this</span>.Kzh = Kjd - Th;</span><br><span class="line">            <span class="keyword">this</span>.Khz = Kzh + Lh;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//曲线线路主点ZH、HZ坐标计算</span></span><br><span class="line">            <span class="keyword">this</span>.ZH = <span class="keyword">new</span> Point(id, JDi.X - Th * Math.Cos(alphaZH), JDi.Y - Th * Math.Sin(alphaZH));</span><br><span class="line">            <span class="keyword">this</span>.HZ = <span class="keyword">new</span> Point(id, JDi.X + Th * Math.Cos(alphaHZ), JDi.Y + Th * Math.Sin(alphaHZ));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//QZ、HY、YH</span></span><br><span class="line">            <span class="keyword">this</span>.QZ = <span class="keyword">new</span> Milepost(Kzh + Lh / <span class="number">2.0</span>, Kzh, Khz, Kzh + JDi.L, Kzh + Lh - JDi.L, m, P, beita0, alpha, alphaZH, alphaHZ, ZH, HZ, JDi, <span class="string">&quot;缓和曲面&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.HY = <span class="keyword">new</span> Milepost(Kzh + Ls, Kzh, Khz, Kzh + JDi.L, Kzh + Lh - JDi.L, m, P, beita0, alpha, alphaZH, alphaHZ, ZH, HZ, JDi, <span class="string">&quot;缓和曲面&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.YH = <span class="keyword">new</span> Milepost(Kzh + Lh - Ls, Kzh, Khz, Kzh + JDi.L, Kzh + Lh - JDi.L, m, P, beita0, alpha, alphaZH, alphaHZ, ZH, HZ, JDi, <span class="string">&quot;缓和曲面&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="3-计算功能类-定义后只需输入数据就可以获得计算结果"><a href="#3-计算功能类-定义后只需输入数据就可以获得计算结果" class="headerlink" title="3. 计算功能类(定义后只需输入数据就可以获得计算结果)"></a>3. 计算功能类(定义后只需输入数据就可以获得计算结果)</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Final</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> K;                                         <span class="comment">//道路总长</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> curveNum, EcurveNum;                          <span class="comment">//圆曲线数目、缓曲线数目</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Curve&gt; curves = <span class="keyword">new</span> List&lt;Curve&gt;();           <span class="comment">//曲面</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Ecurve&gt; ecurves = <span class="keyword">new</span> List&lt;Ecurve&gt;();        <span class="comment">//缓和曲面</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Milepost&gt; mileposts = <span class="keyword">new</span> List&lt;Milepost&gt;();  <span class="comment">//里程桩</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 里程桩计算（间隔距离，起点和终点，交点）</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Final</span>(<span class="params"><span class="built_in">double</span> dL, Point[] points, List&lt;Node&gt; JDi</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//赋初始值</span></span><br><span class="line">            <span class="keyword">this</span>.K = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>.curveNum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>.EcurveNum = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//到当前循环交点曲线的前端点和后端点的总里程</span></span><br><span class="line">            <span class="built_in">double</span> Kz = <span class="number">0</span>, Ky = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//曲线计算的起始点坐标和交点Jdi的里程</span></span><br><span class="line">            <span class="built_in">double</span> Px = <span class="number">0</span>, Py = <span class="number">0</span>, Kjd;</span><br><span class="line">            <span class="comment">//按交点循环计算</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; JDi.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//判断是否符合缓和曲面</span></span><br><span class="line">                <span class="keyword">if</span> (JDi[i].L != <span class="number">0.0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Px = points[<span class="number">0</span>].X;</span><br><span class="line">                        Py = points[<span class="number">0</span>].Y;</span><br><span class="line">                        Kjd = Ky + Math.Sqrt(Math.Pow(Px - JDi[i].X, <span class="number">2</span>) + Math.Pow(Py - JDi[i].Y, <span class="number">2</span>));</span><br><span class="line">                        ecurves.Add(<span class="keyword">new</span> Ecurve(JDi[i], Kjd ,Px, Py, JDi[i + <span class="number">1</span>].X, JDi[i + <span class="number">1</span>].Y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (i == JDi.Count() - <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Kjd = Ky + Math.Sqrt(Math.Pow(Px - JDi[i].X, <span class="number">2</span>) + Math.Pow(Py - JDi[i].Y, <span class="number">2</span>));</span><br><span class="line">                        ecurves.Add(<span class="keyword">new</span> Ecurve(JDi[i], Kjd, JDi[i - <span class="number">1</span>].X, JDi[i - <span class="number">1</span>].Y, points[<span class="number">1</span>].X, points[<span class="number">1</span>].Y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Kjd = Ky + Math.Sqrt(Math.Pow(Px - JDi[i].X, <span class="number">2</span>) + Math.Pow(Py - JDi[i].Y, <span class="number">2</span>));</span><br><span class="line">                        ecurves.Add(<span class="keyword">new</span> Ecurve(JDi[i], Kjd, JDi[i - <span class="number">1</span>].X, JDi[i - <span class="number">1</span>].Y, JDi[i + <span class="number">1</span>].X, JDi[i + <span class="number">1</span>].Y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    EcurveNum += <span class="number">1</span>;</span><br><span class="line">                    Kz = ecurves[EcurveNum - <span class="number">1</span>].Kzh;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (K - Ky == <span class="number">0</span>)&#123; K += dL; &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//里程桩在直线上</span></span><br><span class="line">                    <span class="keyword">while</span> (K &lt;= Kz)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">double</span> x = Px + (K - Ky) * Math.Sin(ecurves[EcurveNum - <span class="number">1</span>].alphaZH);</span><br><span class="line">                        <span class="built_in">double</span> y = Py + (K - Ky) * Math.Cos(ecurves[EcurveNum - <span class="number">1</span>].alphaZH);</span><br><span class="line">                        <span class="keyword">this</span>.mileposts.Add(<span class="keyword">new</span> Milepost(K, x, y, <span class="string">&quot;直线&quot;</span>));</span><br><span class="line">                        <span class="comment">//当前道路总长+dL</span></span><br><span class="line">                        K += dL;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//里程桩在曲线上</span></span><br><span class="line">                    <span class="keyword">while</span> (K - Kz &lt;= ecurves[EcurveNum - <span class="number">1</span>].Lh)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.mileposts.Add(<span class="keyword">new</span> Milepost(K, Kz, ecurves[EcurveNum - <span class="number">1</span>].Khz, ecurves[EcurveNum - <span class="number">1</span>].HY.K, ecurves[EcurveNum - <span class="number">1</span>].YH.K, </span><br><span class="line">                            ecurves[EcurveNum - <span class="number">1</span>].m, ecurves[EcurveNum - <span class="number">1</span>].P, ecurves[EcurveNum - <span class="number">1</span>].beita0, ecurves[EcurveNum - <span class="number">1</span>].alpha, </span><br><span class="line">                            ecurves[EcurveNum - <span class="number">1</span>].alphaZH, ecurves[EcurveNum - <span class="number">1</span>].alphaHZ, ecurves[EcurveNum - <span class="number">1</span>].ZH, ecurves[EcurveNum - <span class="number">1</span>].HZ, </span><br><span class="line">                            JDi[i], <span class="string">&quot;缓和曲线&quot;</span>));</span><br><span class="line">                        K += dL;</span><br><span class="line">                    &#125;</span><br><span class="line">                    Ky = ecurves[EcurveNum - <span class="number">1</span>].Khz;</span><br><span class="line">                    Px = ecurves[EcurveNum - <span class="number">1</span>].HZ.X;</span><br><span class="line">                    Py = ecurves[EcurveNum - <span class="number">1</span>].HZ.Y;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Px = points[<span class="number">0</span>].X;</span><br><span class="line">                        Py = points[<span class="number">0</span>].Y;</span><br><span class="line">                        Kjd = Ky + Math.Sqrt(Math.Pow(Px - JDi[i].X, <span class="number">2</span>) + Math.Pow(Py - JDi[i].Y, <span class="number">2</span>));</span><br><span class="line">                        curves.Add(<span class="keyword">new</span> Curve(JDi[i], Kjd, Px, Py, JDi[i + <span class="number">1</span>].X, JDi[i + <span class="number">1</span>].Y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (i == JDi.Count() - <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Kjd = Ky + Math.Sqrt(Math.Pow(Px - JDi[i].X, <span class="number">2</span>) + Math.Pow(Py - JDi[i].Y, <span class="number">2</span>));</span><br><span class="line">                        curves.Add(<span class="keyword">new</span> Curve(JDi[i], Kjd, JDi[i - <span class="number">1</span>].X, JDi[i - <span class="number">1</span>].Y, points[<span class="number">1</span>].X, points[<span class="number">1</span>].Y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Kjd = Ky + Math.Sqrt(Math.Pow(Px - JDi[i].X, <span class="number">2</span>) + Math.Pow(Py - JDi[i].Y, <span class="number">2</span>));</span><br><span class="line">                        curves.Add(<span class="keyword">new</span> Curve(JDi[i], Kjd, JDi[i - <span class="number">1</span>].X, JDi[i - <span class="number">1</span>].Y, JDi[i + <span class="number">1</span>].X, JDi[i + <span class="number">1</span>].Y));</span><br><span class="line">                    &#125;</span><br><span class="line">                    curveNum += <span class="number">1</span>;</span><br><span class="line">                    Kz = curves[curveNum - <span class="number">1</span>].Kzy;</span><br><span class="line">                    <span class="keyword">if</span> (K - Ky == <span class="number">0</span>) &#123; K += dL; &#125;</span><br><span class="line">                    <span class="comment">//里程桩在直线上</span></span><br><span class="line">                    <span class="keyword">while</span> (K &lt;= Kz)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">double</span> x = Px + (K - Ky) * Math.Sin(curves[curveNum - <span class="number">1</span>].alpha1);</span><br><span class="line">                        <span class="built_in">double</span> y = Py + (K - Ky) * Math.Cos(curves[curveNum - <span class="number">1</span>].alpha1);</span><br><span class="line">                        <span class="keyword">this</span>.mileposts.Add(<span class="keyword">new</span> Milepost(K, x, y, <span class="string">&quot;直线&quot;</span>));</span><br><span class="line">                        <span class="comment">//当前道路总长+dL</span></span><br><span class="line">                        K += dL;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//里程桩在曲线上</span></span><br><span class="line">                    <span class="keyword">while</span> (K - Kz &lt;= ecurves[curveNum - <span class="number">1</span>].Lh)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.mileposts.Add(<span class="keyword">new</span> Milepost(K, Kz, curves[curveNum - <span class="number">1</span>].alpha, curves[curveNum - <span class="number">1</span>].alpha1, curves[curveNum - <span class="number">1</span>].ZY, </span><br><span class="line">                            JDi[i], <span class="string">&quot;圆曲线&quot;</span>));</span><br><span class="line">                        K += dL;</span><br><span class="line">                    &#125;</span><br><span class="line">                    Ky = curves[curveNum - <span class="number">1</span>].Kyz;</span><br><span class="line">                    Px = curves[curveNum - <span class="number">1</span>].YZ.X;</span><br><span class="line">                    Py = curves[curveNum - <span class="number">1</span>].YZ.Y;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Kz = Ky + Math.Sqrt(Math.Pow(Px - points[<span class="number">1</span>].X, <span class="number">2</span>) + Math.Pow(Py - points[<span class="number">1</span>].Y, <span class="number">2</span>));</span><br><span class="line">            <span class="keyword">while</span> (K &lt;= Kz)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">double</span> x = Px + (K - Ky) * Math.Sin(curves[curveNum - <span class="number">1</span>].alpha1);</span><br><span class="line">                <span class="built_in">double</span> y = Py + (K - Ky) * Math.Cos(curves[curveNum - <span class="number">1</span>].alpha1);</span><br><span class="line">                <span class="keyword">this</span>.mileposts.Add(<span class="keyword">new</span> Milepost(K, x, y, <span class="string">&quot;直线&quot;</span>));</span><br><span class="line">                <span class="comment">//当前道路总长+dL</span></span><br><span class="line">                K += dL;</span><br><span class="line">            &#125;</span><br><span class="line">            K = K - dL + Kz % dL;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="4-界面函数功能"><a href="#4-界面函数功能" class="headerlink" title="4. 界面函数功能"></a>4. 界面函数功能</h5><h6 id="1-初始化定义-后续使用"><a href="#1-初始化定义-后续使用" class="headerlink" title="1. 初始化定义(后续使用)"></a>1. 初始化定义(后续使用)</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Point[] points = <span class="keyword">new</span> Point[<span class="number">2</span>];       <span class="comment">//起始点和终点</span></span><br><span class="line">List&lt;Node&gt; nodes = <span class="keyword">new</span> List&lt;Node&gt;(); <span class="comment">//交点数据</span></span><br><span class="line">Final Final;                         <span class="comment">//计算结果</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Form1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line">    toolStripTextBox1.Text = <span class="string">&quot;20&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-读取文件函数"><a href="#2-读取文件函数" class="headerlink" title="2.读取文件函数"></a>2.读取文件函数</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Readtxt</span>()</span></span><br><span class="line">       &#123;<span class="comment">// openFileDialog</span></span><br><span class="line">           OpenFileDialog open = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line">           open.Filter = <span class="string">&quot;(文本文件)|*.txt&quot;</span>;</span><br><span class="line">           <span class="keyword">if</span> (open.ShowDialog() == DialogResult.OK)</span><br><span class="line">           &#123;</span><br><span class="line">               StreamReader reader = <span class="keyword">new</span> StreamReader(open.FileName);</span><br><span class="line">               <span class="built_in">int</span> i = <span class="number">0</span>;</span><br><span class="line">               <span class="keyword">while</span> (!reader.EndOfStream)</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="built_in">string</span>[] vs = reader.ReadLine().Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">                   <span class="comment">// 起始点</span></span><br><span class="line">                   <span class="keyword">if</span> (vs.Count() == <span class="number">3</span>)</span><br><span class="line">                   &#123;</span><br><span class="line">                       points[i] = <span class="keyword">new</span> Point(vs[<span class="number">0</span>], Convert.ToDouble(vs[<span class="number">1</span>]),                                 Convert.ToDouble(vs[<span class="number">2</span>]));</span><br><span class="line">                       i += <span class="number">1</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="comment">// 过程点</span></span><br><span class="line">                   <span class="keyword">if</span> (vs.Count() == <span class="number">5</span>)</span><br><span class="line">                   &#123;</span><br><span class="line">                       nodes.Add(<span class="keyword">new</span> Node(vs[<span class="number">0</span>], Convert.ToDouble(vs[<span class="number">1</span>]),                          Convert.ToDouble(vs[<span class="number">2</span>]), Convert.ToDouble(vs[<span class="number">3</span>]), </span><br><span class="line">                       Convert.ToDouble(vs[<span class="number">4</span>])));</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               reader.Close();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               toolStripStatusLabel1.Text = <span class="string">&quot;文件打开失败&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h6 id="3-写入文件函数"><a href="#3-写入文件函数" class="headerlink" title="3. 写入文件函数"></a>3. 写入文件函数</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> 保存ToolStripMenuItem_Click(<span class="built_in">object</span> sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            SaveFileDialog save = <span class="keyword">new</span> SaveFileDialog();</span><br><span class="line">            save.Filter = <span class="string">&quot;(文本文件)|*.txt&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (save.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                StreamWriter writer = <span class="keyword">new</span> StreamWriter(save.FileName);</span><br><span class="line">                writer.Write(richTextBox1.Text);  <span class="comment">// 将过程写入文档后保存</span></span><br><span class="line">                writer.Close();</span><br><span class="line">                toolStripStatusLabel1.Text = <span class="string">&quot;保存成功&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                toolStripStatusLabel1.Text = <span class="string">&quot;保存失败&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="4-清空函数-初始化"><a href="#4-清空函数-初始化" class="headerlink" title="4. 清空函数(初始化)"></a>4. 清空函数(初始化)</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">private void 清空ToolStripMenuItem_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            points = new Point[2];       //起始点和终点</span><br><span class="line">            nodes = new List&lt;Node&gt;();    //交点数据</span><br><span class="line">            Final = null;</span><br><span class="line">            richTextBox1.Text = &quot;&quot;;</span><br><span class="line">            dataGridView1.Columns.Clear();</span><br><span class="line">            toolStripStatusLabel1.Text = &quot;清空完成&quot;;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="5-计算函数"><a href="#5-计算函数" class="headerlink" title="5. 计算函数"></a>5. 计算函数</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> 计算ToolStripMenuItem_Click(<span class="built_in">object</span> sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Final = <span class="keyword">new</span> Final(Convert.ToDouble(toolStripTextBox1.Text), points, nodes);</span><br><span class="line">                richTextBox1.Text = Report();</span><br><span class="line">                tabControl1.SelectedTab = tabPage2;</span><br><span class="line">                toolStripStatusLabel1.Text = <span class="string">&quot;计算成功&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span></span><br><span class="line">            &#123;</span><br><span class="line">                toolStripStatusLabel1.Text = <span class="string">&quot;计算失败&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="6-显示数据函数"><a href="#6-显示数据函数" class="headerlink" title="6. 显示数据函数"></a>6. 显示数据函数</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">private</span> DataTable <span class="title">ShowTable</span>()<span class="comment">// DataTable的使用</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//建立表格列</span></span><br><span class="line">            DataTable table = <span class="keyword">new</span> DataTable();</span><br><span class="line">            table.Columns.Add(<span class="string">&quot;点号&quot;</span>);</span><br><span class="line">            table.Columns.Add(<span class="string">&quot;X坐标&quot;</span>);</span><br><span class="line">            table.Columns.Add(<span class="string">&quot;Y坐标&quot;</span>);</span><br><span class="line">            table.Columns.Add(<span class="string">&quot;圆曲线半径&quot;</span>);</span><br><span class="line">            table.Columns.Add(<span class="string">&quot;缓曲线长&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//显示起点坐标</span></span><br><span class="line">            DataRow row = table.NewRow();</span><br><span class="line">            row[<span class="string">&quot;点号&quot;</span>] = points[<span class="number">0</span>].id;</span><br><span class="line">            row[<span class="string">&quot;X坐标&quot;</span>] = points[<span class="number">0</span>].X;</span><br><span class="line">            row[<span class="string">&quot;Y坐标&quot;</span>] = points[<span class="number">0</span>].Y;</span><br><span class="line">            table.Rows.Add(row);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//显示交点坐标</span></span><br><span class="line">            <span class="keyword">foreach</span>(Node node <span class="keyword">in</span> nodes)</span><br><span class="line">            &#123;</span><br><span class="line">                row = table.NewRow();</span><br><span class="line">                row[<span class="string">&quot;点号&quot;</span>] = node.id;</span><br><span class="line">                row[<span class="string">&quot;X坐标&quot;</span>] = node.X;</span><br><span class="line">                row[<span class="string">&quot;Y坐标&quot;</span>] = node.Y;</span><br><span class="line">                row[<span class="string">&quot;圆曲线半径&quot;</span>] = node.R;</span><br><span class="line">                row[<span class="string">&quot;缓曲线长&quot;</span>] = node.L;</span><br><span class="line">                table.Rows.Add(row);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//显示终点坐标</span></span><br><span class="line">            row = table.NewRow();</span><br><span class="line">            row[<span class="string">&quot;点号&quot;</span>] = points[<span class="number">1</span>].id;</span><br><span class="line">            row[<span class="string">&quot;X坐标&quot;</span>] = points[<span class="number">1</span>].X;</span><br><span class="line">            row[<span class="string">&quot;Y坐标&quot;</span>] = points[<span class="number">1</span>].Y;</span><br><span class="line">            table.Rows.Add(row);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> table;<span class="comment">// table</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> 打开ToolStripMenuItem_Click(<span class="built_in">object</span> sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Readtxt();</span><br><span class="line">            dataGridView1.DataSource = ShowTable();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//插值间隔默认值为20</span></span><br><span class="line"></span><br><span class="line">            toolStripStatusLabel1.Text = <span class="string">&quot;读取成功&quot;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="7-报告显示函数-较为统一"><a href="#7-报告显示函数-较为统一" class="headerlink" title="7. 报告显示函数(较为统一)"></a>7. 报告显示函数(较为统一)</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">Report</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            str += <span class="string">&quot;----------------------------------------道路曲线计算报告----------------------------------------\n1、统计信息：\n\n    道路总长：&quot;</span></span><br><span class="line">                + Final.K.ToString(<span class="string">&quot;0.000m&quot;</span>) + <span class="string">&quot;\n    圆曲线数目：&quot;</span> + Final.curveNum + <span class="string">&quot;\n    缓曲面数目：&quot;</span> + Final.EcurveNum + <span class="string">&quot;\n\n2、曲线数据\n&quot;</span>;</span><br><span class="line">            <span class="built_in">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (Node node <span class="keyword">in</span> nodes)</span><br><span class="line">            &#123;</span><br><span class="line">                str += <span class="string">&quot;\n    曲线名：&quot;</span> + node.id + <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (node.L == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Curve curve = Final.curves[i];</span><br><span class="line">                    i += <span class="number">1</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;转向角&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;半径&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;桩间距&quot;</span>)</span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;切线长&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;曲线长&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;外矢距&quot;</span>)</span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;切曲差&quot;</span>) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, rad2dms(Math.Abs(curve.alpha))) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, node.R.ToString(<span class="string">&quot;0m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,15&#125;&quot;</span>, toolStripTextBox1.Text) + <span class="string">&quot;m&quot;</span></span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.T.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.L.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.E.ToString(<span class="string">&quot;0.000m&quot;</span>))</span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.q.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;桩号&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;X坐标&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;Y坐标&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;里程&quot;</span>) +<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;ZY&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.ZY.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.ZY.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.Kzy.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;QZ&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.QZ.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.QZ.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.QZ.K.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;YZ&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.YZ.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.YZ.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.Kyz.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, node.id) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, node.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, node.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, curve.Kjd.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Ecurve Ecurve = Final.ecurves[j];</span><br><span class="line">                    j += <span class="number">1</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;转向角&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;半径&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;桩间距&quot;</span>)</span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;切线长&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;曲线长&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;外矢距&quot;</span>)</span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;切曲差&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;缓外角&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;切垂距&quot;</span>) </span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, <span class="string">&quot;内移量&quot;</span>) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,17&#125;&quot;</span>, rad2dms(Math.Abs(Ecurve.alpha))) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,12&#125;&quot;</span>, node.R.ToString(<span class="string">&quot;0m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,15&#125;&quot;</span>, toolStripTextBox1.Text) + <span class="string">&quot;m&quot;</span></span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.Th.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.Lh.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.Eh.ToString(<span class="string">&quot;0.000m&quot;</span>))</span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.q.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,17&#125;&quot;</span>, rad2dms(Ecurve.beita0)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,13&#125;&quot;</span>, Ecurve.P.ToString(<span class="string">&quot;0.000m&quot;</span>)) </span><br><span class="line">                        + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.m.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;桩号&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;X坐标&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;Y坐标&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;里程&quot;</span>) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;ZH&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.ZH.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.ZH.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.Kzh.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;HY&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.HY.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.HY.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.HY.K.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;QZ&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.QZ.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.QZ.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.QZ.K.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;YH&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.YH .X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.YH.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.YH.K.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, <span class="string">&quot;HZ&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.HZ.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.HZ.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.Khz.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                    str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, node.id) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, node.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, node.Y.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, Ecurve.Kjd.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            str +=<span class="string">&quot;\n3、定桩数据\n\n&quot;</span> + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;点名&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;X坐标&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;Y坐标&quot;</span>)</span><br><span class="line">                + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,14&#125;&quot;</span>, <span class="string">&quot;里程&quot;</span>) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,12&#125;&quot;</span>, <span class="string">&quot;曲线类型&quot;</span>) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">foreach</span>(Milepost milepost <span class="keyword">in</span> Final.mileposts)</span><br><span class="line">            &#123;</span><br><span class="line">                str += <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, milepost.id) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, milepost.X.ToString(<span class="string">&quot;0.000&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, milepost.Y.ToString(<span class="string">&quot;0.000&quot;</span>))</span><br><span class="line">                + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,16&#125;&quot;</span>, milepost.K.ToString(<span class="string">&quot;0.000m&quot;</span>)) + <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0,12&#125;&quot;</span>, milepost.belong) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h6 id="8-数据格式转换函数"><a href="#8-数据格式转换函数" class="headerlink" title="8. 数据格式转换函数"></a>8. 数据格式转换函数</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">rad2dms</span>(<span class="params"><span class="built_in">double</span> rad</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">double</span> dms = rad / Math.PI * <span class="number">180.0</span>;</span><br><span class="line">            <span class="built_in">double</span> d = Math.Floor(dms);</span><br><span class="line">            <span class="built_in">double</span> m = Math.Floor((dms - d) * <span class="number">60.0</span>);</span><br><span class="line">            <span class="built_in">double</span> s = (dms - d - m / <span class="number">60.0</span>) * <span class="number">3600</span>;</span><br><span class="line">            <span class="keyword">return</span> d.ToString(<span class="string">&quot;0°&quot;</span>) + m.ToString(<span class="string">&quot;0′&quot;</span>) + s.ToString(<span class="string">&quot;0.00″&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="5-要求和总结"><a href="#5-要求和总结" class="headerlink" title="5. 要求和总结"></a>5. 要求和总结</h4><h5 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h5><h5 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;道路曲线要素计算与里程桩计算&quot;&gt;&lt;a href=&quot;#道路曲线要素计算与里程桩计算&quot; class=&quot;headerlink&quot; title=&quot;道路曲线要素计算与里程桩计算&quot;&gt;&lt;/a&gt;道路曲线要素计算与里程桩计算&lt;/h3&gt;&lt;h5 id=&quot;1-视图分析与功能分布&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="code_ch" scheme="http://example.com/tags/code-ch/"/>
    
  </entry>
  
  <entry>
    <title>hhh01</title>
    <link href="http://example.com/2022/05/07/hhh01/"/>
    <id>http://example.com/2022/05/07/hhh01/</id>
    <published>2022-05-06T16:02:12.000Z</published>
    <updated>2022-05-07T08:30:31.736Z</updated>
    
    <content type="html"><![CDATA[<h3 id="欢迎来到我的第一篇博客-（用于记录如何创建一个博客）"><a href="#欢迎来到我的第一篇博客-（用于记录如何创建一个博客）" class="headerlink" title="欢迎来到我的第一篇博客 （用于记录如何创建一个博客）"></a>欢迎来到我的第一篇博客 （用于记录如何创建一个博客）</h3><h4 id="1-搭建博客前的准备（即环境的配置）"><a href="#1-搭建博客前的准备（即环境的配置）" class="headerlink" title="1.  搭建博客前的准备（即环境的配置）"></a>1.  搭建博客前的准备（即环境的配置）</h4><h5 id="二个需要的工具（git和node-js-和-github的账号注册"><a href="#二个需要的工具（git和node-js-和-github的账号注册" class="headerlink" title="二个需要的工具（git和node.js) 和 github的账号注册"></a>二个需要的工具（git和node.js) 和 github的账号注册</h5><h6 id="1-git-的安装说明（官网地址：https-git-scm-com-）"><a href="#1-git-的安装说明（官网地址：https-git-scm-com-）" class="headerlink" title="1. git 的安装说明（官网地址：https://git-scm.com/）"></a>1. git 的安装说明（官网地址：<a href="https://git-scm.com/%EF%BC%89">https://git-scm.com/）</a></h6><ul><li><p>安装好后鼠标右键会多出<strong>Git GUI here</strong> 和 **Git Bash Here ** 我们之后使用 <strong>Git Bash Here</strong> 如图：</p><p><img src="https://s2.loli.net/2022/05/07/TVj4P9FduIkh8n1.png" alt="image-20220507001919878"></p></li><li><p>点击 <strong>Git Bash Here</strong> 弹出控制台 这里介绍一些 之后会使用到的一些命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git --version // 查看git的版本</span><br><span class="line">git config list // 查看git的配置</span><br><span class="line">git config --global --list // 查看global中的配置 后续有用到</span><br><span class="line">git remote <span class="built_in">rm</span> origin // 删除原来的远程库</span><br><span class="line">git remote add origin <span class="string">&quot;你的仓库地址&quot;</span>// 添加上传的远程仓库(github)具体后面</span><br><span class="line">git pull --rebase origin master // 将远程库同步到本地库</span><br><span class="line">git add xxxx// 缓冲上传内容</span><br><span class="line">git commit -m <span class="string">&quot;注释信息&quot;</span> //  上传到远程库</span><br><span class="line"></span><br><span class="line">ssh -T git@github.com // 测试是否连接上github</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h6 id="2-Node-js-的安装（官网：http-nodejs-cn"><a href="#2-Node-js-的安装（官网：http-nodejs-cn" class="headerlink" title="2. Node.js 的安装（官网：http://nodejs.cn/)"></a>2. Node.js 的安装（官网：<a href="http://nodejs.cn/">http://nodejs.cn/</a>)</h6><ul><li><p>安装结束后可以使用 node -v来检测安装是否成功<img src="https://s2.loli.net/2022/05/07/WRU1cLsJIOkNCpb.png" alt="image-20220507004058232"></p></li><li><p>安装成功后的，系统默认会在<strong>C:\Users\用户\AppData\Roaming\npm</strong> 或者你自定义的地址例如我的<strong>D:\Node</strong>。 在该目录下<strong>新建两个文件夹node_global、node_cache</strong>并右键属性在【安全】-&gt;【编辑】-&gt;全部勾选</p></li><li><p>同样在Git bash here 的界面中 进行操作配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;你的node_global地址&quot;</span></span><br><span class="line">// 我的则是D:\Node\node_global</span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;你的node_cache地址&quot;</span></span><br><span class="line">// 我的则是D:\Node\node_global</span><br><span class="line">npm config <span class="built_in">set</span> registry=http://registry.npm.taobao.org</span><br><span class="line">// 配置镜像站</span><br><span class="line">npm config list // 显示所有配置信息，这时候C:/Users/用户 会出现 .npmrc文件</span><br><span class="line"></span><br><span class="line">npm install xxx -g // 将xxx完整的下载</span><br></pre></td></tr></table></figure></li><li><p>然后配置电脑的环境变量<strong>设置-&gt;编辑系统环境变量-&gt;环境变量</strong><br>在系统变量中插入[NODE_PATH] 你的文件路径 例子：<img src="https://s2.loli.net/2022/05/07/fsVFywp2NQiRCZo.png" alt="image-20220507004848326"></p></li><li><p>更改path内容 例子<br><img src="https://s2.loli.net/2022/05/07/RpqhUn925vNs7Oo.png" alt="image-20220507004942027"></p></li><li><p>可以测试一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g </span><br><span class="line">// 如果安装的包在你的node_global中的node_moudules则成功</span><br><span class="line">// 然后安装hexo 和 --hexo-deployer-git</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li></ul><h6 id="3-配置ssh-keys-用途-免密的将本地源码和资源上传到github"><a href="#3-配置ssh-keys-用途-免密的将本地源码和资源上传到github" class="headerlink" title="3. 配置ssh keys 用途(免密的将本地源码和资源上传到github)"></a>3. 配置ssh keys 用途(免密的将本地源码和资源上传到github)</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮箱地址&quot;</span> // 生成ssh key</span><br><span class="line">// 中途会出现需要你输入的情况，初学建议直接回车不处理</span><br><span class="line">// 结束后出现保存地址 一般是C:/Users/用户/.ssh 中</span><br><span class="line">// 进入该文件 用记事本打开id_rsa.pub 复制全部内容</span><br></pre></td></tr></table></figure><ul><li>打开github主页 的setting<img src="https://s2.loli.net/2022/05/07/telmD7QVS6EA8hi.png" alt="image-20220507010216081"></li><li>选择 <strong>SSH and GPG keys</strong> </li></ul><p><img src="https://s2.loli.net/2022/05/07/VI35ijb9AvZKBEa.png" alt="image-20220507010304814"></p><ul><li>命名并将内容复制进去后添加 后续会需要确定你的github密码<img src="https://s2.loli.net/2022/05/07/rL5fnjG8YPVA9Ey.png" alt="image-20220507010400036"></li><li>然后可以在 <strong>控制台界面中使用 ssh -T <a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#x69;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;">&#x67;&#105;&#116;&#x40;&#103;&#x69;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;</a></strong>进行测试</li></ul><h4 id="2-开始搭建博客"><a href="#2-开始搭建博客" class="headerlink" title="2. 开始搭建博客"></a>2. 开始搭建博客</h4><ul><li>在你选择的文件中右键<strong>Git bash Here</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> <span class="built_in">test</span> // 新建一个<span class="built_in">test</span>文件夹</span><br><span class="line">hexo init // 初始化个人博客</span><br><span class="line">hexo g // 生成静态网页</span><br><span class="line">hexo s</span><br><span class="line">// 预览 出现http://localhost:4000 复制到浏览器即可预览</span><br></pre></td></tr></table></figure><ul><li><p>在github中新建<strong>repository</strong> 并命名既可以<br><img src="https://s2.loli.net/2022/05/07/M4TJvOu72Hd68qn.png" alt="image-20220507012028296"></p></li><li><p>然后在test的文件下用记事本打开-config.yml 在最后可以看到并修改</p><p><img src="https://s2.loli.net/2022/05/07/LtXK8UHpAiy7l6T.png" alt="image-20220507012238354"></p></li><li><pre><code class="bash">发布到github中 在控制台中输入hexo d </code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;欢迎来到我的第一篇博客-（用于记录如何创建一个博客）&quot;&gt;&lt;a href=&quot;#欢迎来到我的第一篇博客-（用于记录如何创建一个博客）&quot; class=&quot;headerlink&quot; title=&quot;欢迎来到我的第一篇博客 （用于记录如何创建一个博客）&quot;&gt;&lt;/a&gt;欢迎来到我的第一</summary>
      
    
    
    
    
    <category term="First" scheme="http://example.com/tags/First/"/>
    
  </entry>
  
  <entry>
    <title>THE FIRST TEST AND HEXO TRAIN</title>
    <link href="http://example.com/2022/05/05/hello-world/"/>
    <id>http://example.com/2022/05/05/hello-world/</id>
    <published>2022-05-05T14:15:01.574Z</published>
    <updated>2022-05-10T15:18:35.408Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy <span class="comment"># 或者 hexo d/g 部署之前写成静态文件</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="WeloCome-to-my-blog"><a href="#WeloCome-to-my-blog" class="headerlink" title="WeloCome to my blog"></a>WeloCome to my blog</h3><p>这里将展示 Hexo的使用模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [filename] <span class="comment">#发布文稿</span></span><br><span class="line"></span><br><span class="line">hexo s <span class="comment"># 启动服务器 </span></span><br><span class="line">hexo render [file] -o [output_file]<span class="comment"># 渲染文件</span></span><br><span class="line">hexo clean <span class="comment"># 清除缓存文件</span></span><br><span class="line">hexo list <span class="comment"># 列出网站资料</span></span><br><span class="line">hexo --deaft <span class="comment"># 显示草稿</span></span><br><span class="line">hexo --cwd [....] <span class="comment"># 自定义当前工作目录</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
